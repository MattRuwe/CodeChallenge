//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace OmahaMTG.CodeChallengeMobile.CodeChallengeService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainServiceFault", Namespace="DomainServices")]
    public partial class DomainServiceFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ErrorCodeField;
        
        private string ErrorMessageField;
        
        private bool IsDomainExceptionField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo> OperationErrorsField;
        
        private string StackTraceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDomainException {
            get {
                return this.IsDomainExceptionField;
            }
            set {
                if ((this.IsDomainExceptionField.Equals(value) != true)) {
                    this.IsDomainExceptionField = value;
                    this.RaisePropertyChanged("IsDomainException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo> OperationErrors {
            get {
                return this.OperationErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationErrorsField, value) != true)) {
                    this.OperationErrorsField = value;
                    this.RaisePropertyChanged("OperationErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResultInfo", Namespace="DomainServices")]
    public partial class ValidationResultInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ErrorCodeField;
        
        private string MessageField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> SourceMemberNamesField;
        
        private string StackTraceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<string> SourceMemberNames {
            get {
                return this.SourceMemberNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceMemberNamesField, value) != true)) {
                    this.SourceMemberNamesField = value;
                    this.RaisePropertyChanged("SourceMemberNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResult", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    public partial class QueryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfEntryListing", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfEntryListing : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfvw_codechallenge_secure", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfvw_codechallenge_secure : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallengeListing", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallengeListing : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_Assembly", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_Assembly : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_DeveloperAssembly", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_DeveloperAssembly : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfvw_codechallenge_entry_challenge_user", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfvw_codechallenge_entry_challenge_user : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_Entry", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_Entry : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_Entry_Result", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_Entry_Result : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_Sponsor", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_Sponsor : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCodeChallenge_Announcement", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfCodeChallenge_Announcement : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfResultsListing", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class QueryResultOfResultsListing : OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult {
        
        private System.Collections.ObjectModel.ObservableCollection<object> IncludedResultsField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing> RootResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<object> IncludedResults {
            get {
                return this.IncludedResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedResultsField, value) != true)) {
                    this.IncludedResultsField = value;
                    this.RaisePropertyChanged("IncludedResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing> RootResults {
            get {
                return this.RootResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.RootResultsField, value) != true)) {
                    this.RootResultsField = value;
                    this.RaisePropertyChanged("RootResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeSetEntry", Namespace="DomainServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultDetailsListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.aspnet_Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ResultsListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.EntryListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_secure>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeListing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Assembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_DeveloperAssembly>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.vw_codechallenge_entry_challenge_user>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Entry_Result>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Sponsor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallenge_Announcement>))]
    public partial class ChangeSetEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>> AssociationsField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> ConflictMembersField;
        
        private object EntityField;
        
        private System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>> EntityActionsField;
        
        private bool HasMemberChangesField;
        
        private int IdField;
        
        private bool IsDeleteConflictField;
        
        private OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation OperationField;
        
        private System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>> OriginalAssociationsField;
        
        private object OriginalEntityField;
        
        private object StoreEntityField;
        
        private System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo> ValidationErrorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>> Associations {
            get {
                return this.AssociationsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociationsField, value) != true)) {
                    this.AssociationsField = value;
                    this.RaisePropertyChanged("Associations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<string> ConflictMembers {
            get {
                return this.ConflictMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.ConflictMembersField, value) != true)) {
                    this.ConflictMembersField = value;
                    this.RaisePropertyChanged("ConflictMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<object>> EntityActions {
            get {
                return this.EntityActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityActionsField, value) != true)) {
                    this.EntityActionsField = value;
                    this.RaisePropertyChanged("EntityActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMemberChanges {
            get {
                return this.HasMemberChangesField;
            }
            set {
                if ((this.HasMemberChangesField.Equals(value) != true)) {
                    this.HasMemberChangesField = value;
                    this.RaisePropertyChanged("HasMemberChanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool IsDeleteConflict {
            get {
                return this.IsDeleteConflictField;
            }
            set {
                if ((this.IsDeleteConflictField.Equals(value) != true)) {
                    this.IsDeleteConflictField = value;
                    this.RaisePropertyChanged("IsDeleteConflict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainOperation Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.Dictionary<string, System.Collections.ObjectModel.ObservableCollection<int>> OriginalAssociations {
            get {
                return this.OriginalAssociationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalAssociationsField, value) != true)) {
                    this.OriginalAssociationsField = value;
                    this.RaisePropertyChanged("OriginalAssociations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object OriginalEntity {
            get {
                return this.OriginalEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalEntityField, value) != true)) {
                    this.OriginalEntityField = value;
                    this.RaisePropertyChanged("OriginalEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object StoreEntity {
            get {
                return this.StoreEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreEntityField, value) != true)) {
                    this.StoreEntityField = value;
                    this.RaisePropertyChanged("StoreEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ValidationResultInfo> ValidationErrors {
            get {
                return this.ValidationErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationErrorsField, value) != true)) {
                    this.ValidationErrorsField = value;
                    this.RaisePropertyChanged("ValidationErrors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainOperation", Namespace="DomainServices")]
    public enum DomainOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Query = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insert = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoke = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultsListing", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class ResultsListing : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemblyFullNameField;
        
        private int CodeChallengeIDField;
        
        private string CodeChallengeNameField;
        
        private System.DateTime DateAddedField;
        
        private System.Nullable<System.DateTime> DateRanField;
        
        private string ExecutionDetailsField;
        
        private System.Nullable<int> FinalScoreField;
        
        private int IDField;
        
        private bool IsPublishedField;
        
        private int PositionField;
        
        private string StatusField;
        
        private System.Nullable<int> TotalExecutionTimeField;
        
        private System.Guid UserIDField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyFullName {
            get {
                return this.AssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyFullNameField, value) != true)) {
                    this.AssemblyFullNameField = value;
                    this.RaisePropertyChanged("AssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeChallengeID {
            get {
                return this.CodeChallengeIDField;
            }
            set {
                if ((this.CodeChallengeIDField.Equals(value) != true)) {
                    this.CodeChallengeIDField = value;
                    this.RaisePropertyChanged("CodeChallengeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeChallengeName {
            get {
                return this.CodeChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeChallengeNameField, value) != true)) {
                    this.CodeChallengeNameField = value;
                    this.RaisePropertyChanged("CodeChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRan {
            get {
                return this.DateRanField;
            }
            set {
                if ((this.DateRanField.Equals(value) != true)) {
                    this.DateRanField = value;
                    this.RaisePropertyChanged("DateRan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionDetails {
            get {
                return this.ExecutionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionDetailsField, value) != true)) {
                    this.ExecutionDetailsField = value;
                    this.RaisePropertyChanged("ExecutionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalScore {
            get {
                return this.FinalScoreField;
            }
            set {
                if ((this.FinalScoreField.Equals(value) != true)) {
                    this.FinalScoreField = value;
                    this.RaisePropertyChanged("FinalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalExecutionTime {
            get {
                return this.TotalExecutionTimeField;
            }
            set {
                if ((this.TotalExecutionTimeField.Equals(value) != true)) {
                    this.TotalExecutionTimeField = value;
                    this.RaisePropertyChanged("TotalExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultDetailsListing", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class ResultDetailsListing : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorNoteField;
        
        private System.Nullable<decimal> CpuCyclesField;
        
        private int DurationField;
        
        private int EntryIDField;
        
        private string ErrorField;
        
        private int IDField;
        
        private string ResultMessageField;
        
        private int ScoreField;
        
        private bool SuccessfulField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorNote {
            get {
                return this.AuthorNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNoteField, value) != true)) {
                    this.AuthorNoteField = value;
                    this.RaisePropertyChanged("AuthorNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CpuCycles {
            get {
                return this.CpuCyclesField;
            }
            set {
                if ((this.CpuCyclesField.Equals(value) != true)) {
                    this.CpuCyclesField = value;
                    this.RaisePropertyChanged("CpuCycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryID {
            get {
                return this.EntryIDField;
            }
            set {
                if ((this.EntryIDField.Equals(value) != true)) {
                    this.EntryIDField = value;
                    this.RaisePropertyChanged("EntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultMessage {
            get {
                return this.ResultMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultMessageField, value) != true)) {
                    this.ResultMessageField = value;
                    this.RaisePropertyChanged("ResultMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryListing", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class EntryListing : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorUsernameField;
        
        private string ChallengeNameField;
        
        private System.DateTime DateAddedField;
        
        private int EntryIDField;
        
        private System.Nullable<int> FinalScoreField;
        
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorUsername {
            get {
                return this.AuthorUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorUsernameField, value) != true)) {
                    this.AuthorUsernameField = value;
                    this.RaisePropertyChanged("AuthorUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeName {
            get {
                return this.ChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeNameField, value) != true)) {
                    this.ChallengeNameField = value;
                    this.RaisePropertyChanged("ChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryID {
            get {
                return this.EntryIDField;
            }
            set {
                if ((this.EntryIDField.Equals(value) != true)) {
                    this.EntryIDField = value;
                    this.RaisePropertyChanged("EntryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalScore {
            get {
                return this.FinalScoreField;
            }
            set {
                if ((this.FinalScoreField.Equals(value) != true)) {
                    this.FinalScoreField = value;
                    this.RaisePropertyChanged("FinalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_codechallenge_secure", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class vw_codechallenge_secure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChallengeNameField;
        
        private string DocumentationFilenameField;
        
        private System.DateTime EndDateField;
        
        private string ExecutionCommonAssemblyFullNameField;
        
        private string ExecutorAssemblyFullNameField;
        
        private string InstructionsField;
        
        private decimal MaximumMemoryUsageBytesField;
        
        private int MaximumRunningSecondsField;
        
        private string SampleProjectFilenameField;
        
        private string SponsorDescriptionField;
        
        private string SponsorNameField;
        
        private System.DateTime StartDateField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeName {
            get {
                return this.ChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeNameField, value) != true)) {
                    this.ChallengeNameField = value;
                    this.RaisePropertyChanged("ChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentationFilename {
            get {
                return this.DocumentationFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentationFilenameField, value) != true)) {
                    this.DocumentationFilenameField = value;
                    this.RaisePropertyChanged("DocumentationFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionCommonAssemblyFullName {
            get {
                return this.ExecutionCommonAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionCommonAssemblyFullNameField, value) != true)) {
                    this.ExecutionCommonAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutionCommonAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutorAssemblyFullName {
            get {
                return this.ExecutorAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorAssemblyFullNameField, value) != true)) {
                    this.ExecutorAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutorAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumMemoryUsageBytes {
            get {
                return this.MaximumMemoryUsageBytesField;
            }
            set {
                if ((this.MaximumMemoryUsageBytesField.Equals(value) != true)) {
                    this.MaximumMemoryUsageBytesField = value;
                    this.RaisePropertyChanged("MaximumMemoryUsageBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumRunningSeconds {
            get {
                return this.MaximumRunningSecondsField;
            }
            set {
                if ((this.MaximumRunningSecondsField.Equals(value) != true)) {
                    this.MaximumRunningSecondsField = value;
                    this.RaisePropertyChanged("MaximumRunningSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleProjectFilename {
            get {
                return this.SampleProjectFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleProjectFilenameField, value) != true)) {
                    this.SampleProjectFilenameField = value;
                    this.RaisePropertyChanged("SampleProjectFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SponsorDescription {
            get {
                return this.SponsorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SponsorDescriptionField, value) != true)) {
                    this.SponsorDescriptionField = value;
                    this.RaisePropertyChanged("SponsorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SponsorName {
            get {
                return this.SponsorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SponsorNameField, value) != true)) {
                    this.SponsorNameField = value;
                    this.RaisePropertyChanged("SponsorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_DeveloperAssembly", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_DeveloperAssembly : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] assemblyField;
        
        private string assembly_fullnameField;
        
        private int codechallenge_idField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] assembly {
            get {
                return this.assemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.assemblyField, value) != true)) {
                    this.assemblyField = value;
                    this.RaisePropertyChanged("assembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assembly_fullname {
            get {
                return this.assembly_fullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.assembly_fullnameField, value) != true)) {
                    this.assembly_fullnameField = value;
                    this.RaisePropertyChanged("assembly_fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int codechallenge_id {
            get {
                return this.codechallenge_idField;
            }
            set {
                if ((this.codechallenge_idField.Equals(value) != true)) {
                    this.codechallenge_idField = value;
                    this.RaisePropertyChanged("codechallenge_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_Entry", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_Entry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemblyFullNameField;
        
        private System.Guid AuthorUserIdField;
        
        private int CodeChallenge_IdField;
        
        private System.DateTime DateAddedField;
        
        private System.Nullable<System.DateTime> DateRanField;
        
        private string ExecutionDetailsField;
        
        private System.Nullable<int> FinalScoreField;
        
        private bool IsPublishedField;
        
        private string StatusField;
        
        private byte[] SubmissionField;
        
        private System.Nullable<int> TotalExecutionTimeField;
        
        private string TypeNameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyFullName {
            get {
                return this.AssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyFullNameField, value) != true)) {
                    this.AssemblyFullNameField = value;
                    this.RaisePropertyChanged("AssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuthorUserId {
            get {
                return this.AuthorUserIdField;
            }
            set {
                if ((this.AuthorUserIdField.Equals(value) != true)) {
                    this.AuthorUserIdField = value;
                    this.RaisePropertyChanged("AuthorUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeChallenge_Id {
            get {
                return this.CodeChallenge_IdField;
            }
            set {
                if ((this.CodeChallenge_IdField.Equals(value) != true)) {
                    this.CodeChallenge_IdField = value;
                    this.RaisePropertyChanged("CodeChallenge_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRan {
            get {
                return this.DateRanField;
            }
            set {
                if ((this.DateRanField.Equals(value) != true)) {
                    this.DateRanField = value;
                    this.RaisePropertyChanged("DateRan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionDetails {
            get {
                return this.ExecutionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionDetailsField, value) != true)) {
                    this.ExecutionDetailsField = value;
                    this.RaisePropertyChanged("ExecutionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalScore {
            get {
                return this.FinalScoreField;
            }
            set {
                if ((this.FinalScoreField.Equals(value) != true)) {
                    this.FinalScoreField = value;
                    this.RaisePropertyChanged("FinalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Submission {
            get {
                return this.SubmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmissionField, value) != true)) {
                    this.SubmissionField = value;
                    this.RaisePropertyChanged("Submission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalExecutionTime {
            get {
                return this.TotalExecutionTimeField;
            }
            set {
                if ((this.TotalExecutionTimeField.Equals(value) != true)) {
                    this.TotalExecutionTimeField = value;
                    this.RaisePropertyChanged("TotalExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChallengeNameField;
        
        private System.Nullable<int> CodeChallenge_Sponsor_idField;
        
        private byte[] DocumentationField;
        
        private string DocumentationFilenameField;
        
        private System.DateTime EndDateField;
        
        private byte[] ExecutionCommonAssemblyField;
        
        private string ExecutionCommonAssemblyFullNameField;
        
        private byte[] ExecutorAssemblyField;
        
        private string ExecutorAssemblyFullNameField;
        
        private string InstructionsField;
        
        private long MaximumMemoryUsageBytesField;
        
        private int MaximumRunningSecondsField;
        
        private byte[] SampleProjectField;
        
        private string SampleProjectFilenameField;
        
        private System.DateTime StartDateField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeName {
            get {
                return this.ChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeNameField, value) != true)) {
                    this.ChallengeNameField = value;
                    this.RaisePropertyChanged("ChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeChallenge_Sponsor_id {
            get {
                return this.CodeChallenge_Sponsor_idField;
            }
            set {
                if ((this.CodeChallenge_Sponsor_idField.Equals(value) != true)) {
                    this.CodeChallenge_Sponsor_idField = value;
                    this.RaisePropertyChanged("CodeChallenge_Sponsor_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Documentation {
            get {
                return this.DocumentationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentationField, value) != true)) {
                    this.DocumentationField = value;
                    this.RaisePropertyChanged("Documentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentationFilename {
            get {
                return this.DocumentationFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentationFilenameField, value) != true)) {
                    this.DocumentationFilenameField = value;
                    this.RaisePropertyChanged("DocumentationFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ExecutionCommonAssembly {
            get {
                return this.ExecutionCommonAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionCommonAssemblyField, value) != true)) {
                    this.ExecutionCommonAssemblyField = value;
                    this.RaisePropertyChanged("ExecutionCommonAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionCommonAssemblyFullName {
            get {
                return this.ExecutionCommonAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionCommonAssemblyFullNameField, value) != true)) {
                    this.ExecutionCommonAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutionCommonAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ExecutorAssembly {
            get {
                return this.ExecutorAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorAssemblyField, value) != true)) {
                    this.ExecutorAssemblyField = value;
                    this.RaisePropertyChanged("ExecutorAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutorAssemblyFullName {
            get {
                return this.ExecutorAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorAssemblyFullNameField, value) != true)) {
                    this.ExecutorAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutorAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaximumMemoryUsageBytes {
            get {
                return this.MaximumMemoryUsageBytesField;
            }
            set {
                if ((this.MaximumMemoryUsageBytesField.Equals(value) != true)) {
                    this.MaximumMemoryUsageBytesField = value;
                    this.RaisePropertyChanged("MaximumMemoryUsageBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumRunningSeconds {
            get {
                return this.MaximumRunningSecondsField;
            }
            set {
                if ((this.MaximumRunningSecondsField.Equals(value) != true)) {
                    this.MaximumRunningSecondsField = value;
                    this.RaisePropertyChanged("MaximumRunningSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SampleProject {
            get {
                return this.SampleProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleProjectField, value) != true)) {
                    this.SampleProjectField = value;
                    this.RaisePropertyChanged("SampleProject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleProjectFilename {
            get {
                return this.SampleProjectFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleProjectFilenameField, value) != true)) {
                    this.SampleProjectFilenameField = value;
                    this.RaisePropertyChanged("SampleProjectFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_Sponsor", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_Sponsor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string NameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_Entry_Result", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_Entry_Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string author_noteField;
        
        private int codechallenge_entry_idField;
        
        private System.Nullable<decimal> cpu_cyclesField;
        
        private int durationField;
        
        private string errorField;
        
        private int idField;
        
        private string result_messageField;
        
        private int scoreField;
        
        private bool successfulField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string author_note {
            get {
                return this.author_noteField;
            }
            set {
                if ((object.ReferenceEquals(this.author_noteField, value) != true)) {
                    this.author_noteField = value;
                    this.RaisePropertyChanged("author_note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int codechallenge_entry_id {
            get {
                return this.codechallenge_entry_idField;
            }
            set {
                if ((this.codechallenge_entry_idField.Equals(value) != true)) {
                    this.codechallenge_entry_idField = value;
                    this.RaisePropertyChanged("codechallenge_entry_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> cpu_cycles {
            get {
                return this.cpu_cyclesField;
            }
            set {
                if ((this.cpu_cyclesField.Equals(value) != true)) {
                    this.cpu_cyclesField = value;
                    this.RaisePropertyChanged("cpu_cycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int duration {
            get {
                return this.durationField;
            }
            set {
                if ((this.durationField.Equals(value) != true)) {
                    this.durationField = value;
                    this.RaisePropertyChanged("duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string error {
            get {
                return this.errorField;
            }
            set {
                if ((object.ReferenceEquals(this.errorField, value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string result_message {
            get {
                return this.result_messageField;
            }
            set {
                if ((object.ReferenceEquals(this.result_messageField, value) != true)) {
                    this.result_messageField = value;
                    this.RaisePropertyChanged("result_message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool successful {
            get {
                return this.successfulField;
            }
            set {
                if ((this.successfulField.Equals(value) != true)) {
                    this.successfulField = value;
                    this.RaisePropertyChanged("successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="aspnet_Users", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class aspnet_Users : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid ApplicationIdField;
        
        private bool IsAnonymousField;
        
        private System.DateTime LastActivityDateField;
        
        private string LoweredUserNameField;
        
        private string MobileAliasField;
        
        private System.Guid UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnonymous {
            get {
                return this.IsAnonymousField;
            }
            set {
                if ((this.IsAnonymousField.Equals(value) != true)) {
                    this.IsAnonymousField = value;
                    this.RaisePropertyChanged("IsAnonymous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoweredUserName {
            get {
                return this.LoweredUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoweredUserNameField, value) != true)) {
                    this.LoweredUserNameField = value;
                    this.RaisePropertyChanged("LoweredUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileAlias {
            get {
                return this.MobileAliasField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileAliasField, value) != true)) {
                    this.MobileAliasField = value;
                    this.RaisePropertyChanged("MobileAlias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallengeListing", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallengeListing : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChallengeNameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeName {
            get {
                return this.ChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeNameField, value) != true)) {
                    this.ChallengeNameField = value;
                    this.RaisePropertyChanged("ChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_Assembly", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_Assembly : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemblyFullNameField;
        
        private bool TrustedField;
        
        private byte[] assemblyField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyFullName {
            get {
                return this.AssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyFullNameField, value) != true)) {
                    this.AssemblyFullNameField = value;
                    this.RaisePropertyChanged("AssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trusted {
            get {
                return this.TrustedField;
            }
            set {
                if ((this.TrustedField.Equals(value) != true)) {
                    this.TrustedField = value;
                    this.RaisePropertyChanged("Trusted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] assembly {
            get {
                return this.assemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.assemblyField, value) != true)) {
                    this.assemblyField = value;
                    this.RaisePropertyChanged("assembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_codechallenge_entry_challenge_user", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class vw_codechallenge_entry_challenge_user : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemblyFullNameField;
        
        private System.Guid AuthorUserIdField;
        
        private string ChallengeNameField;
        
        private int CodeChallenge_IdField;
        
        private System.DateTime DateAddedField;
        
        private System.Nullable<System.DateTime> DateRanField;
        
        private string DocumentationFilenameField;
        
        private System.DateTime EndDateField;
        
        private string ExecutionCommonAssemblyFullNameField;
        
        private string ExecutorAssemblyFullNameField;
        
        private int Expr1Field;
        
        private System.Nullable<int> FinalScoreField;
        
        private string InstructionsField;
        
        private decimal MaximumMemoryUsageBytesField;
        
        private int MaximumRunningSecondsField;
        
        private string SampleProjectFilenameField;
        
        private System.DateTime StartDateField;
        
        private System.Nullable<int> TotalExecutionTimeField;
        
        private string TypeNameField;
        
        private System.Guid UserIdField;
        
        private string UserNameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyFullName {
            get {
                return this.AssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyFullNameField, value) != true)) {
                    this.AssemblyFullNameField = value;
                    this.RaisePropertyChanged("AssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuthorUserId {
            get {
                return this.AuthorUserIdField;
            }
            set {
                if ((this.AuthorUserIdField.Equals(value) != true)) {
                    this.AuthorUserIdField = value;
                    this.RaisePropertyChanged("AuthorUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChallengeName {
            get {
                return this.ChallengeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengeNameField, value) != true)) {
                    this.ChallengeNameField = value;
                    this.RaisePropertyChanged("ChallengeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeChallenge_Id {
            get {
                return this.CodeChallenge_IdField;
            }
            set {
                if ((this.CodeChallenge_IdField.Equals(value) != true)) {
                    this.CodeChallenge_IdField = value;
                    this.RaisePropertyChanged("CodeChallenge_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRan {
            get {
                return this.DateRanField;
            }
            set {
                if ((this.DateRanField.Equals(value) != true)) {
                    this.DateRanField = value;
                    this.RaisePropertyChanged("DateRan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentationFilename {
            get {
                return this.DocumentationFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentationFilenameField, value) != true)) {
                    this.DocumentationFilenameField = value;
                    this.RaisePropertyChanged("DocumentationFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionCommonAssemblyFullName {
            get {
                return this.ExecutionCommonAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionCommonAssemblyFullNameField, value) != true)) {
                    this.ExecutionCommonAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutionCommonAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutorAssemblyFullName {
            get {
                return this.ExecutorAssemblyFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorAssemblyFullNameField, value) != true)) {
                    this.ExecutorAssemblyFullNameField = value;
                    this.RaisePropertyChanged("ExecutorAssemblyFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Expr1 {
            get {
                return this.Expr1Field;
            }
            set {
                if ((this.Expr1Field.Equals(value) != true)) {
                    this.Expr1Field = value;
                    this.RaisePropertyChanged("Expr1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinalScore {
            get {
                return this.FinalScoreField;
            }
            set {
                if ((this.FinalScoreField.Equals(value) != true)) {
                    this.FinalScoreField = value;
                    this.RaisePropertyChanged("FinalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumMemoryUsageBytes {
            get {
                return this.MaximumMemoryUsageBytesField;
            }
            set {
                if ((this.MaximumMemoryUsageBytesField.Equals(value) != true)) {
                    this.MaximumMemoryUsageBytesField = value;
                    this.RaisePropertyChanged("MaximumMemoryUsageBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumRunningSeconds {
            get {
                return this.MaximumRunningSecondsField;
            }
            set {
                if ((this.MaximumRunningSecondsField.Equals(value) != true)) {
                    this.MaximumRunningSecondsField = value;
                    this.RaisePropertyChanged("MaximumRunningSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SampleProjectFilename {
            get {
                return this.SampleProjectFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleProjectFilenameField, value) != true)) {
                    this.SampleProjectFilenameField = value;
                    this.RaisePropertyChanged("SampleProjectFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalExecutionTime {
            get {
                return this.TotalExecutionTimeField;
            }
            set {
                if ((this.TotalExecutionTimeField.Equals(value) != true)) {
                    this.TotalExecutionTimeField = value;
                    this.RaisePropertyChanged("TotalExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeChallenge_Announcement", Namespace="http://schemas.datacontract.org/2004/07/SilverlightUI")]
    public partial class CodeChallenge_Announcement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AnnouncementHtmlField;
        
        private System.DateTime PostingDateField;
        
        private string TitleField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnouncementHtml {
            get {
                return this.AnnouncementHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnouncementHtmlField, value) != true)) {
                    this.AnnouncementHtmlField = value;
                    this.RaisePropertyChanged("AnnouncementHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostingDate {
            get {
                return this.PostingDateField;
            }
            set {
                if ((this.PostingDateField.Equals(value) != true)) {
                    this.PostingDateField = value;
                    this.RaisePropertyChanged("PostingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeChallengeService.CodeChallengeDomainServicesoap")]
    public interface CodeChallengeDomainServicesoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetAssemblyFullname", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetAssemblyFullnameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetAssemblyFullnameDomainServic" +
            "eFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetAssemblyFullname(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState);
        
        string EndGetAssemblyFullname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetIChallengeImplementations", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetIChallengeImplementationsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetIChallengeImplementationsDom" +
            "ainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetIChallengeImplementations(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState);
        
        string EndGetIChallengeImplementations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetResults", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetResultsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetResults(int codeChallengeID, System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing EndGetResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetLatestEntries", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetLatestEntriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetLatestEntriesDomainServiceFa" +
            "ult", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetLatestEntries(int count, System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing EndGetLatestEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengeSecure", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengeSecureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengeSecureDomainSer" +
            "viceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallengeSecure(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure EndGetCodeChallengeSecure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesSecure", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesSecureResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesSecureDomainSe" +
            "rviceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallengesSecure(bool onlyActive, System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing EndGetCodeChallengesSecure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenges", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesDomainServiceF" +
            "ault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenges(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge EndGetCodeChallenges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesWithDeveloperA" +
            "ssemblies", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesWithDeveloperA" +
            "ssembliesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallengesWithDeveloperA" +
            "ssembliesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallengesWithDeveloperAssemblies(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure EndGetCodeChallengesWithDeveloperAssemblies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Assembly", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_AssemblyRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_AssemblyDomain" +
            "ServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_Assembly(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly EndGetCodeChallenge_Assembly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_DeveloperAssem" +
            "bly", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_DeveloperAssem" +
            "blyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_DeveloperAssem" +
            "blyDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_DeveloperAssembly(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly EndGetCodeChallenge_DeveloperAssembly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/RerunEntry", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/RerunEntryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/RerunEntryDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginRerunEntry(int entryId, System.AsyncCallback callback, object asyncState);
        
        void EndRerunEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetEntry_Challenge_User", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetEntry_Challenge_UserResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetEntry_Challenge_UserDomainSe" +
            "rviceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetEntry_Challenge_User(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user EndGetEntry_Challenge_User(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Entry", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_EntryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_EntryDomainSer" +
            "viceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_Entry(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry EndGetCodeChallenge_Entry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetLeaderBoardResults", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetLeaderBoardResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetLeaderBoardResultsDomainServ" +
            "iceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetLeaderBoardResults(int challengeID, System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing EndGetLeaderBoardResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Entry_Result", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Entry_ResultRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Entry_ResultDo" +
            "mainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_Entry_Result(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result EndGetCodeChallenge_Entry_Result(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Sponsor", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_SponsorRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_SponsorDomainS" +
            "erviceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_Sponsor(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor EndGetCodeChallenge_Sponsor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_Announcement", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_AnnouncementRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/GetCodeChallenge_AnnouncementDo" +
            "mainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginGetCodeChallenge_Announcement(System.AsyncCallback callback, object asyncState);
        
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement EndGetCodeChallenge_Announcement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CodeChallengeDomainServicesoap/SubmitChanges", ReplyAction="http://tempuri.org/CodeChallengeDomainServicesoap/SubmitChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(OmahaMTG.CodeChallengeMobile.CodeChallengeService.DomainServiceFault), Action="http://tempuri.org/CodeChallengeDomainServicesoap/SubmitChangesDomainServiceFault" +
            "", Name="DomainServiceFault", Namespace="DomainServices")]
        System.IAsyncResult BeginSubmitChanges(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> EndSubmitChanges(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CodeChallengeDomainServicesoapChannel : OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssemblyFullnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssemblyFullnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIChallengeImplementationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIChallengeImplementationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallengeSecureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallengeSecureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallengesSecureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallengesSecureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallengesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallengesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallengesWithDeveloperAssembliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallengesWithDeveloperAssembliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_AssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_AssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_DeveloperAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_DeveloperAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEntry_Challenge_UserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEntry_Challenge_UserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_EntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_EntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeaderBoardResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeaderBoardResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_Entry_ResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_Entry_ResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_SponsorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_SponsorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCodeChallenge_AnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCodeChallenge_AnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeChallengeDomainServicesoapClient : System.ServiceModel.ClientBase<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap>, OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap {
        
        private BeginOperationDelegate onBeginGetAssemblyFullnameDelegate;
        
        private EndOperationDelegate onEndGetAssemblyFullnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssemblyFullnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIChallengeImplementationsDelegate;
        
        private EndOperationDelegate onEndGetIChallengeImplementationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetIChallengeImplementationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResultsDelegate;
        
        private EndOperationDelegate onEndGetResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestEntriesDelegate;
        
        private EndOperationDelegate onEndGetLatestEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallengeSecureDelegate;
        
        private EndOperationDelegate onEndGetCodeChallengeSecureDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallengeSecureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallengesSecureDelegate;
        
        private EndOperationDelegate onEndGetCodeChallengesSecureDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallengesSecureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallengesDelegate;
        
        private EndOperationDelegate onEndGetCodeChallengesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallengesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallengesWithDeveloperAssembliesDelegate;
        
        private EndOperationDelegate onEndGetCodeChallengesWithDeveloperAssembliesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallengesWithDeveloperAssembliesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_AssemblyDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_AssemblyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_AssemblyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_DeveloperAssemblyDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_DeveloperAssemblyDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_DeveloperAssemblyCompletedDelegate;
        
        private BeginOperationDelegate onBeginRerunEntryDelegate;
        
        private EndOperationDelegate onEndRerunEntryDelegate;
        
        private System.Threading.SendOrPostCallback onRerunEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEntry_Challenge_UserDelegate;
        
        private EndOperationDelegate onEndGetEntry_Challenge_UserDelegate;
        
        private System.Threading.SendOrPostCallback onGetEntry_Challenge_UserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_EntryDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_EntryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_EntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLeaderBoardResultsDelegate;
        
        private EndOperationDelegate onEndGetLeaderBoardResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeaderBoardResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_Entry_ResultDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_Entry_ResultDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_Entry_ResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_SponsorDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_SponsorDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_SponsorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCodeChallenge_AnnouncementDelegate;
        
        private EndOperationDelegate onEndGetCodeChallenge_AnnouncementDelegate;
        
        private System.Threading.SendOrPostCallback onGetCodeChallenge_AnnouncementCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitChangesDelegate;
        
        private EndOperationDelegate onEndSubmitChangesDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CodeChallengeDomainServicesoapClient() {
        }
        
        public CodeChallengeDomainServicesoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeChallengeDomainServicesoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeChallengeDomainServicesoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeChallengeDomainServicesoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAssemblyFullnameCompletedEventArgs> GetAssemblyFullnameCompleted;
        
        public event System.EventHandler<GetIChallengeImplementationsCompletedEventArgs> GetIChallengeImplementationsCompleted;
        
        public event System.EventHandler<GetResultsCompletedEventArgs> GetResultsCompleted;
        
        public event System.EventHandler<GetLatestEntriesCompletedEventArgs> GetLatestEntriesCompleted;
        
        public event System.EventHandler<GetCodeChallengeSecureCompletedEventArgs> GetCodeChallengeSecureCompleted;
        
        public event System.EventHandler<GetCodeChallengesSecureCompletedEventArgs> GetCodeChallengesSecureCompleted;
        
        public event System.EventHandler<GetCodeChallengesCompletedEventArgs> GetCodeChallengesCompleted;
        
        public event System.EventHandler<GetCodeChallengesWithDeveloperAssembliesCompletedEventArgs> GetCodeChallengesWithDeveloperAssembliesCompleted;
        
        public event System.EventHandler<GetCodeChallenge_AssemblyCompletedEventArgs> GetCodeChallenge_AssemblyCompleted;
        
        public event System.EventHandler<GetCodeChallenge_DeveloperAssemblyCompletedEventArgs> GetCodeChallenge_DeveloperAssemblyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RerunEntryCompleted;
        
        public event System.EventHandler<GetEntry_Challenge_UserCompletedEventArgs> GetEntry_Challenge_UserCompleted;
        
        public event System.EventHandler<GetCodeChallenge_EntryCompletedEventArgs> GetCodeChallenge_EntryCompleted;
        
        public event System.EventHandler<GetLeaderBoardResultsCompletedEventArgs> GetLeaderBoardResultsCompleted;
        
        public event System.EventHandler<GetCodeChallenge_Entry_ResultCompletedEventArgs> GetCodeChallenge_Entry_ResultCompleted;
        
        public event System.EventHandler<GetCodeChallenge_SponsorCompletedEventArgs> GetCodeChallenge_SponsorCompleted;
        
        public event System.EventHandler<GetCodeChallenge_AnnouncementCompletedEventArgs> GetCodeChallenge_AnnouncementCompleted;
        
        public event System.EventHandler<SubmitChangesCompletedEventArgs> SubmitChangesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetAssemblyFullname(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssemblyFullname(assemblyBytes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetAssemblyFullname(System.IAsyncResult result) {
            return base.Channel.EndGetAssemblyFullname(result);
        }
        
        private System.IAsyncResult OnBeginGetAssemblyFullname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] assemblyBytes = ((byte[])(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetAssemblyFullname(assemblyBytes, callback, asyncState);
        }
        
        private object[] OnEndGetAssemblyFullname(System.IAsyncResult result) {
            string retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetAssemblyFullname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssemblyFullnameCompleted(object state) {
            if ((this.GetAssemblyFullnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssemblyFullnameCompleted(this, new GetAssemblyFullnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssemblyFullnameAsync(byte[] assemblyBytes) {
            this.GetAssemblyFullnameAsync(assemblyBytes, null);
        }
        
        public void GetAssemblyFullnameAsync(byte[] assemblyBytes, object userState) {
            if ((this.onBeginGetAssemblyFullnameDelegate == null)) {
                this.onBeginGetAssemblyFullnameDelegate = new BeginOperationDelegate(this.OnBeginGetAssemblyFullname);
            }
            if ((this.onEndGetAssemblyFullnameDelegate == null)) {
                this.onEndGetAssemblyFullnameDelegate = new EndOperationDelegate(this.OnEndGetAssemblyFullname);
            }
            if ((this.onGetAssemblyFullnameCompletedDelegate == null)) {
                this.onGetAssemblyFullnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssemblyFullnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssemblyFullnameDelegate, new object[] {
                        assemblyBytes}, this.onEndGetAssemblyFullnameDelegate, this.onGetAssemblyFullnameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetIChallengeImplementations(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIChallengeImplementations(assemblyBytes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetIChallengeImplementations(System.IAsyncResult result) {
            return base.Channel.EndGetIChallengeImplementations(result);
        }
        
        private System.IAsyncResult OnBeginGetIChallengeImplementations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] assemblyBytes = ((byte[])(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetIChallengeImplementations(assemblyBytes, callback, asyncState);
        }
        
        private object[] OnEndGetIChallengeImplementations(System.IAsyncResult result) {
            string retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetIChallengeImplementations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIChallengeImplementationsCompleted(object state) {
            if ((this.GetIChallengeImplementationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIChallengeImplementationsCompleted(this, new GetIChallengeImplementationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIChallengeImplementationsAsync(byte[] assemblyBytes) {
            this.GetIChallengeImplementationsAsync(assemblyBytes, null);
        }
        
        public void GetIChallengeImplementationsAsync(byte[] assemblyBytes, object userState) {
            if ((this.onBeginGetIChallengeImplementationsDelegate == null)) {
                this.onBeginGetIChallengeImplementationsDelegate = new BeginOperationDelegate(this.OnBeginGetIChallengeImplementations);
            }
            if ((this.onEndGetIChallengeImplementationsDelegate == null)) {
                this.onEndGetIChallengeImplementationsDelegate = new EndOperationDelegate(this.OnEndGetIChallengeImplementations);
            }
            if ((this.onGetIChallengeImplementationsCompletedDelegate == null)) {
                this.onGetIChallengeImplementationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIChallengeImplementationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetIChallengeImplementationsDelegate, new object[] {
                        assemblyBytes}, this.onEndGetIChallengeImplementationsDelegate, this.onGetIChallengeImplementationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetResults(int codeChallengeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResults(codeChallengeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetResults(System.IAsyncResult result) {
            return base.Channel.EndGetResults(result);
        }
        
        private System.IAsyncResult OnBeginGetResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int codeChallengeID = ((int)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetResults(codeChallengeID, callback, asyncState);
        }
        
        private object[] OnEndGetResults(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResultsCompleted(object state) {
            if ((this.GetResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResultsAsync(int codeChallengeID) {
            this.GetResultsAsync(codeChallengeID, null);
        }
        
        public void GetResultsAsync(int codeChallengeID, object userState) {
            if ((this.onBeginGetResultsDelegate == null)) {
                this.onBeginGetResultsDelegate = new BeginOperationDelegate(this.OnBeginGetResults);
            }
            if ((this.onEndGetResultsDelegate == null)) {
                this.onEndGetResultsDelegate = new EndOperationDelegate(this.OnEndGetResults);
            }
            if ((this.onGetResultsCompletedDelegate == null)) {
                this.onGetResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetResultsDelegate, new object[] {
                        codeChallengeID}, this.onEndGetResultsDelegate, this.onGetResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetLatestEntries(int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestEntries(count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetLatestEntries(System.IAsyncResult result) {
            return base.Channel.EndGetLatestEntries(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int count = ((int)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetLatestEntries(count, callback, asyncState);
        }
        
        private object[] OnEndGetLatestEntries(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetLatestEntries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestEntriesCompleted(object state) {
            if ((this.GetLatestEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestEntriesCompleted(this, new GetLatestEntriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestEntriesAsync(int count) {
            this.GetLatestEntriesAsync(count, null);
        }
        
        public void GetLatestEntriesAsync(int count, object userState) {
            if ((this.onBeginGetLatestEntriesDelegate == null)) {
                this.onBeginGetLatestEntriesDelegate = new BeginOperationDelegate(this.OnBeginGetLatestEntries);
            }
            if ((this.onEndGetLatestEntriesDelegate == null)) {
                this.onEndGetLatestEntriesDelegate = new EndOperationDelegate(this.OnEndGetLatestEntries);
            }
            if ((this.onGetLatestEntriesCompletedDelegate == null)) {
                this.onGetLatestEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestEntriesDelegate, new object[] {
                        count}, this.onEndGetLatestEntriesDelegate, this.onGetLatestEntriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallengeSecure(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallengeSecure(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallengeSecure(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallengeSecure(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallengeSecure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallengeSecure(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallengeSecure(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallengeSecure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallengeSecureCompleted(object state) {
            if ((this.GetCodeChallengeSecureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallengeSecureCompleted(this, new GetCodeChallengeSecureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallengeSecureAsync() {
            this.GetCodeChallengeSecureAsync(null);
        }
        
        public void GetCodeChallengeSecureAsync(object userState) {
            if ((this.onBeginGetCodeChallengeSecureDelegate == null)) {
                this.onBeginGetCodeChallengeSecureDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallengeSecure);
            }
            if ((this.onEndGetCodeChallengeSecureDelegate == null)) {
                this.onEndGetCodeChallengeSecureDelegate = new EndOperationDelegate(this.OnEndGetCodeChallengeSecure);
            }
            if ((this.onGetCodeChallengeSecureCompletedDelegate == null)) {
                this.onGetCodeChallengeSecureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallengeSecureCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallengeSecureDelegate, null, this.onEndGetCodeChallengeSecureDelegate, this.onGetCodeChallengeSecureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallengesSecure(bool onlyActive, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallengesSecure(onlyActive, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallengesSecure(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallengesSecure(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallengesSecure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool onlyActive = ((bool)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallengesSecure(onlyActive, callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallengesSecure(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallengesSecure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallengesSecureCompleted(object state) {
            if ((this.GetCodeChallengesSecureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallengesSecureCompleted(this, new GetCodeChallengesSecureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallengesSecureAsync(bool onlyActive) {
            this.GetCodeChallengesSecureAsync(onlyActive, null);
        }
        
        public void GetCodeChallengesSecureAsync(bool onlyActive, object userState) {
            if ((this.onBeginGetCodeChallengesSecureDelegate == null)) {
                this.onBeginGetCodeChallengesSecureDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallengesSecure);
            }
            if ((this.onEndGetCodeChallengesSecureDelegate == null)) {
                this.onEndGetCodeChallengesSecureDelegate = new EndOperationDelegate(this.OnEndGetCodeChallengesSecure);
            }
            if ((this.onGetCodeChallengesSecureCompletedDelegate == null)) {
                this.onGetCodeChallengesSecureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallengesSecureCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallengesSecureDelegate, new object[] {
                        onlyActive}, this.onEndGetCodeChallengesSecureDelegate, this.onGetCodeChallengesSecureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenges(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenges(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenges(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenges(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenges(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenges(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallengesCompleted(object state) {
            if ((this.GetCodeChallengesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallengesCompleted(this, new GetCodeChallengesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallengesAsync() {
            this.GetCodeChallengesAsync(null);
        }
        
        public void GetCodeChallengesAsync(object userState) {
            if ((this.onBeginGetCodeChallengesDelegate == null)) {
                this.onBeginGetCodeChallengesDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenges);
            }
            if ((this.onEndGetCodeChallengesDelegate == null)) {
                this.onEndGetCodeChallengesDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenges);
            }
            if ((this.onGetCodeChallengesCompletedDelegate == null)) {
                this.onGetCodeChallengesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallengesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallengesDelegate, null, this.onEndGetCodeChallengesDelegate, this.onGetCodeChallengesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallengesWithDeveloperAssemblies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallengesWithDeveloperAssemblies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallengesWithDeveloperAssemblies(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallengesWithDeveloperAssemblies(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallengesWithDeveloperAssemblies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallengesWithDeveloperAssemblies(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallengesWithDeveloperAssemblies(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallengesWithDeveloperAssemblies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallengesWithDeveloperAssembliesCompleted(object state) {
            if ((this.GetCodeChallengesWithDeveloperAssembliesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallengesWithDeveloperAssembliesCompleted(this, new GetCodeChallengesWithDeveloperAssembliesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallengesWithDeveloperAssembliesAsync() {
            this.GetCodeChallengesWithDeveloperAssembliesAsync(null);
        }
        
        public void GetCodeChallengesWithDeveloperAssembliesAsync(object userState) {
            if ((this.onBeginGetCodeChallengesWithDeveloperAssembliesDelegate == null)) {
                this.onBeginGetCodeChallengesWithDeveloperAssembliesDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallengesWithDeveloperAssemblies);
            }
            if ((this.onEndGetCodeChallengesWithDeveloperAssembliesDelegate == null)) {
                this.onEndGetCodeChallengesWithDeveloperAssembliesDelegate = new EndOperationDelegate(this.OnEndGetCodeChallengesWithDeveloperAssemblies);
            }
            if ((this.onGetCodeChallengesWithDeveloperAssembliesCompletedDelegate == null)) {
                this.onGetCodeChallengesWithDeveloperAssembliesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallengesWithDeveloperAssembliesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallengesWithDeveloperAssembliesDelegate, null, this.onEndGetCodeChallengesWithDeveloperAssembliesDelegate, this.onGetCodeChallengesWithDeveloperAssembliesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_Assembly(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_Assembly(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_Assembly(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_Assembly(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_Assembly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_Assembly(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_Assembly(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_Assembly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_AssemblyCompleted(object state) {
            if ((this.GetCodeChallenge_AssemblyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_AssemblyCompleted(this, new GetCodeChallenge_AssemblyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_AssemblyAsync() {
            this.GetCodeChallenge_AssemblyAsync(null);
        }
        
        public void GetCodeChallenge_AssemblyAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_AssemblyDelegate == null)) {
                this.onBeginGetCodeChallenge_AssemblyDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_Assembly);
            }
            if ((this.onEndGetCodeChallenge_AssemblyDelegate == null)) {
                this.onEndGetCodeChallenge_AssemblyDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_Assembly);
            }
            if ((this.onGetCodeChallenge_AssemblyCompletedDelegate == null)) {
                this.onGetCodeChallenge_AssemblyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_AssemblyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_AssemblyDelegate, null, this.onEndGetCodeChallenge_AssemblyDelegate, this.onGetCodeChallenge_AssemblyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_DeveloperAssembly(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_DeveloperAssembly(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_DeveloperAssembly(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_DeveloperAssembly(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_DeveloperAssembly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_DeveloperAssembly(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_DeveloperAssembly(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_DeveloperAssembly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_DeveloperAssemblyCompleted(object state) {
            if ((this.GetCodeChallenge_DeveloperAssemblyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_DeveloperAssemblyCompleted(this, new GetCodeChallenge_DeveloperAssemblyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_DeveloperAssemblyAsync() {
            this.GetCodeChallenge_DeveloperAssemblyAsync(null);
        }
        
        public void GetCodeChallenge_DeveloperAssemblyAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_DeveloperAssemblyDelegate == null)) {
                this.onBeginGetCodeChallenge_DeveloperAssemblyDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_DeveloperAssembly);
            }
            if ((this.onEndGetCodeChallenge_DeveloperAssemblyDelegate == null)) {
                this.onEndGetCodeChallenge_DeveloperAssemblyDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_DeveloperAssembly);
            }
            if ((this.onGetCodeChallenge_DeveloperAssemblyCompletedDelegate == null)) {
                this.onGetCodeChallenge_DeveloperAssemblyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_DeveloperAssemblyCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_DeveloperAssemblyDelegate, null, this.onEndGetCodeChallenge_DeveloperAssemblyDelegate, this.onGetCodeChallenge_DeveloperAssemblyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginRerunEntry(int entryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRerunEntry(entryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndRerunEntry(System.IAsyncResult result) {
            base.Channel.EndRerunEntry(result);
        }
        
        private System.IAsyncResult OnBeginRerunEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int entryId = ((int)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginRerunEntry(entryId, callback, asyncState);
        }
        
        private object[] OnEndRerunEntry(System.IAsyncResult result) {
            ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndRerunEntry(result);
            return null;
        }
        
        private void OnRerunEntryCompleted(object state) {
            if ((this.RerunEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RerunEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RerunEntryAsync(int entryId) {
            this.RerunEntryAsync(entryId, null);
        }
        
        public void RerunEntryAsync(int entryId, object userState) {
            if ((this.onBeginRerunEntryDelegate == null)) {
                this.onBeginRerunEntryDelegate = new BeginOperationDelegate(this.OnBeginRerunEntry);
            }
            if ((this.onEndRerunEntryDelegate == null)) {
                this.onEndRerunEntryDelegate = new EndOperationDelegate(this.OnEndRerunEntry);
            }
            if ((this.onRerunEntryCompletedDelegate == null)) {
                this.onRerunEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRerunEntryCompleted);
            }
            base.InvokeAsync(this.onBeginRerunEntryDelegate, new object[] {
                        entryId}, this.onEndRerunEntryDelegate, this.onRerunEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetEntry_Challenge_User(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEntry_Challenge_User(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetEntry_Challenge_User(System.IAsyncResult result) {
            return base.Channel.EndGetEntry_Challenge_User(result);
        }
        
        private System.IAsyncResult OnBeginGetEntry_Challenge_User(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetEntry_Challenge_User(callback, asyncState);
        }
        
        private object[] OnEndGetEntry_Challenge_User(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetEntry_Challenge_User(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEntry_Challenge_UserCompleted(object state) {
            if ((this.GetEntry_Challenge_UserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEntry_Challenge_UserCompleted(this, new GetEntry_Challenge_UserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEntry_Challenge_UserAsync() {
            this.GetEntry_Challenge_UserAsync(null);
        }
        
        public void GetEntry_Challenge_UserAsync(object userState) {
            if ((this.onBeginGetEntry_Challenge_UserDelegate == null)) {
                this.onBeginGetEntry_Challenge_UserDelegate = new BeginOperationDelegate(this.OnBeginGetEntry_Challenge_User);
            }
            if ((this.onEndGetEntry_Challenge_UserDelegate == null)) {
                this.onEndGetEntry_Challenge_UserDelegate = new EndOperationDelegate(this.OnEndGetEntry_Challenge_User);
            }
            if ((this.onGetEntry_Challenge_UserCompletedDelegate == null)) {
                this.onGetEntry_Challenge_UserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEntry_Challenge_UserCompleted);
            }
            base.InvokeAsync(this.onBeginGetEntry_Challenge_UserDelegate, null, this.onEndGetEntry_Challenge_UserDelegate, this.onGetEntry_Challenge_UserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_Entry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_Entry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_Entry(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_Entry(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_Entry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_Entry(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_Entry(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_Entry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_EntryCompleted(object state) {
            if ((this.GetCodeChallenge_EntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_EntryCompleted(this, new GetCodeChallenge_EntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_EntryAsync() {
            this.GetCodeChallenge_EntryAsync(null);
        }
        
        public void GetCodeChallenge_EntryAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_EntryDelegate == null)) {
                this.onBeginGetCodeChallenge_EntryDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_Entry);
            }
            if ((this.onEndGetCodeChallenge_EntryDelegate == null)) {
                this.onEndGetCodeChallenge_EntryDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_Entry);
            }
            if ((this.onGetCodeChallenge_EntryCompletedDelegate == null)) {
                this.onGetCodeChallenge_EntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_EntryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_EntryDelegate, null, this.onEndGetCodeChallenge_EntryDelegate, this.onGetCodeChallenge_EntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetLeaderBoardResults(int challengeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeaderBoardResults(challengeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetLeaderBoardResults(System.IAsyncResult result) {
            return base.Channel.EndGetLeaderBoardResults(result);
        }
        
        private System.IAsyncResult OnBeginGetLeaderBoardResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int challengeID = ((int)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetLeaderBoardResults(challengeID, callback, asyncState);
        }
        
        private object[] OnEndGetLeaderBoardResults(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetLeaderBoardResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeaderBoardResultsCompleted(object state) {
            if ((this.GetLeaderBoardResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeaderBoardResultsCompleted(this, new GetLeaderBoardResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeaderBoardResultsAsync(int challengeID) {
            this.GetLeaderBoardResultsAsync(challengeID, null);
        }
        
        public void GetLeaderBoardResultsAsync(int challengeID, object userState) {
            if ((this.onBeginGetLeaderBoardResultsDelegate == null)) {
                this.onBeginGetLeaderBoardResultsDelegate = new BeginOperationDelegate(this.OnBeginGetLeaderBoardResults);
            }
            if ((this.onEndGetLeaderBoardResultsDelegate == null)) {
                this.onEndGetLeaderBoardResultsDelegate = new EndOperationDelegate(this.OnEndGetLeaderBoardResults);
            }
            if ((this.onGetLeaderBoardResultsCompletedDelegate == null)) {
                this.onGetLeaderBoardResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeaderBoardResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeaderBoardResultsDelegate, new object[] {
                        challengeID}, this.onEndGetLeaderBoardResultsDelegate, this.onGetLeaderBoardResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_Entry_Result(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_Entry_Result(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_Entry_Result(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_Entry_Result(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_Entry_Result(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_Entry_Result(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_Entry_Result(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_Entry_Result(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_Entry_ResultCompleted(object state) {
            if ((this.GetCodeChallenge_Entry_ResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_Entry_ResultCompleted(this, new GetCodeChallenge_Entry_ResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_Entry_ResultAsync() {
            this.GetCodeChallenge_Entry_ResultAsync(null);
        }
        
        public void GetCodeChallenge_Entry_ResultAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_Entry_ResultDelegate == null)) {
                this.onBeginGetCodeChallenge_Entry_ResultDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_Entry_Result);
            }
            if ((this.onEndGetCodeChallenge_Entry_ResultDelegate == null)) {
                this.onEndGetCodeChallenge_Entry_ResultDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_Entry_Result);
            }
            if ((this.onGetCodeChallenge_Entry_ResultCompletedDelegate == null)) {
                this.onGetCodeChallenge_Entry_ResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_Entry_ResultCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_Entry_ResultDelegate, null, this.onEndGetCodeChallenge_Entry_ResultDelegate, this.onGetCodeChallenge_Entry_ResultCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_Sponsor(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_Sponsor(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_Sponsor(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_Sponsor(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_Sponsor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_Sponsor(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_Sponsor(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_Sponsor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_SponsorCompleted(object state) {
            if ((this.GetCodeChallenge_SponsorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_SponsorCompleted(this, new GetCodeChallenge_SponsorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_SponsorAsync() {
            this.GetCodeChallenge_SponsorAsync(null);
        }
        
        public void GetCodeChallenge_SponsorAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_SponsorDelegate == null)) {
                this.onBeginGetCodeChallenge_SponsorDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_Sponsor);
            }
            if ((this.onEndGetCodeChallenge_SponsorDelegate == null)) {
                this.onEndGetCodeChallenge_SponsorDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_Sponsor);
            }
            if ((this.onGetCodeChallenge_SponsorCompletedDelegate == null)) {
                this.onGetCodeChallenge_SponsorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_SponsorCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_SponsorDelegate, null, this.onEndGetCodeChallenge_SponsorDelegate, this.onGetCodeChallenge_SponsorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginGetCodeChallenge_Announcement(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCodeChallenge_Announcement(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndGetCodeChallenge_Announcement(System.IAsyncResult result) {
            return base.Channel.EndGetCodeChallenge_Announcement(result);
        }
        
        private System.IAsyncResult OnBeginGetCodeChallenge_Announcement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginGetCodeChallenge_Announcement(callback, asyncState);
        }
        
        private object[] OnEndGetCodeChallenge_Announcement(System.IAsyncResult result) {
            OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndGetCodeChallenge_Announcement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCodeChallenge_AnnouncementCompleted(object state) {
            if ((this.GetCodeChallenge_AnnouncementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCodeChallenge_AnnouncementCompleted(this, new GetCodeChallenge_AnnouncementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCodeChallenge_AnnouncementAsync() {
            this.GetCodeChallenge_AnnouncementAsync(null);
        }
        
        public void GetCodeChallenge_AnnouncementAsync(object userState) {
            if ((this.onBeginGetCodeChallenge_AnnouncementDelegate == null)) {
                this.onBeginGetCodeChallenge_AnnouncementDelegate = new BeginOperationDelegate(this.OnBeginGetCodeChallenge_Announcement);
            }
            if ((this.onEndGetCodeChallenge_AnnouncementDelegate == null)) {
                this.onEndGetCodeChallenge_AnnouncementDelegate = new EndOperationDelegate(this.OnEndGetCodeChallenge_Announcement);
            }
            if ((this.onGetCodeChallenge_AnnouncementCompletedDelegate == null)) {
                this.onGetCodeChallenge_AnnouncementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCodeChallenge_AnnouncementCompleted);
            }
            base.InvokeAsync(this.onBeginGetCodeChallenge_AnnouncementDelegate, null, this.onEndGetCodeChallenge_AnnouncementDelegate, this.onGetCodeChallenge_AnnouncementCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.BeginSubmitChanges(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitChanges(changeSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap.EndSubmitChanges(System.IAsyncResult result) {
            return base.Channel.EndSubmitChanges(result);
        }
        
        private System.IAsyncResult OnBeginSubmitChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet = ((System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>)(inValues[0]));
            return ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).BeginSubmitChanges(changeSet, callback, asyncState);
        }
        
        private object[] OnEndSubmitChanges(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> retVal = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap)(this)).EndSubmitChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitChangesCompleted(object state) {
            if ((this.SubmitChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitChangesCompleted(this, new SubmitChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitChangesAsync(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet) {
            this.SubmitChangesAsync(changeSet, null);
        }
        
        public void SubmitChangesAsync(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet, object userState) {
            if ((this.onBeginSubmitChangesDelegate == null)) {
                this.onBeginSubmitChangesDelegate = new BeginOperationDelegate(this.OnBeginSubmitChanges);
            }
            if ((this.onEndSubmitChangesDelegate == null)) {
                this.onEndSubmitChangesDelegate = new EndOperationDelegate(this.OnEndSubmitChanges);
            }
            if ((this.onSubmitChangesCompletedDelegate == null)) {
                this.onSubmitChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitChangesCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitChangesDelegate, new object[] {
                        changeSet}, this.onEndSubmitChangesDelegate, this.onSubmitChangesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap CreateChannel() {
            return new CodeChallengeDomainServicesoapClientChannel(this);
        }
        
        private class CodeChallengeDomainServicesoapClientChannel : ChannelBase<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap>, OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap {
            
            public CodeChallengeDomainServicesoapClientChannel(System.ServiceModel.ClientBase<OmahaMTG.CodeChallengeMobile.CodeChallengeService.CodeChallengeDomainServicesoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAssemblyFullname(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = assemblyBytes;
                System.IAsyncResult _result = base.BeginInvoke("GetAssemblyFullname", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAssemblyFullname(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAssemblyFullname", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIChallengeImplementations(byte[] assemblyBytes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = assemblyBytes;
                System.IAsyncResult _result = base.BeginInvoke("GetIChallengeImplementations", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetIChallengeImplementations(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetIChallengeImplementations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetResults(int codeChallengeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = codeChallengeID;
                System.IAsyncResult _result = base.BeginInvoke("GetResults", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing EndGetResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing)(base.EndInvoke("GetResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestEntries(int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = count;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestEntries", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing EndGetLatestEntries(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfEntryListing)(base.EndInvoke("GetLatestEntries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallengeSecure(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallengeSecure", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure EndGetCodeChallengeSecure(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure)(base.EndInvoke("GetCodeChallengeSecure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallengesSecure(bool onlyActive, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = onlyActive;
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallengesSecure", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing EndGetCodeChallengesSecure(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallengeListing)(base.EndInvoke("GetCodeChallengesSecure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenges(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenges", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge EndGetCodeChallenges(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge)(base.EndInvoke("GetCodeChallenges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallengesWithDeveloperAssemblies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallengesWithDeveloperAssemblies", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure EndGetCodeChallengesWithDeveloperAssemblies(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_secure)(base.EndInvoke("GetCodeChallengesWithDeveloperAssemblies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_Assembly(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_Assembly", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly EndGetCodeChallenge_Assembly(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Assembly)(base.EndInvoke("GetCodeChallenge_Assembly", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_DeveloperAssembly(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_DeveloperAssembly", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly EndGetCodeChallenge_DeveloperAssembly(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_DeveloperAssembly)(base.EndInvoke("GetCodeChallenge_DeveloperAssembly", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRerunEntry(int entryId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entryId;
                System.IAsyncResult _result = base.BeginInvoke("RerunEntry", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRerunEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RerunEntry", _args, result);
            }
            
            public System.IAsyncResult BeginGetEntry_Challenge_User(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEntry_Challenge_User", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user EndGetEntry_Challenge_User(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfvw_codechallenge_entry_challenge_user)(base.EndInvoke("GetEntry_Challenge_User", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_Entry(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_Entry", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry EndGetCodeChallenge_Entry(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry)(base.EndInvoke("GetCodeChallenge_Entry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLeaderBoardResults(int challengeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = challengeID;
                System.IAsyncResult _result = base.BeginInvoke("GetLeaderBoardResults", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing EndGetLeaderBoardResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfResultsListing)(base.EndInvoke("GetLeaderBoardResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_Entry_Result(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_Entry_Result", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result EndGetCodeChallenge_Entry_Result(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Entry_Result)(base.EndInvoke("GetCodeChallenge_Entry_Result", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_Sponsor(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_Sponsor", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor EndGetCodeChallenge_Sponsor(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Sponsor)(base.EndInvoke("GetCodeChallenge_Sponsor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCodeChallenge_Announcement(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCodeChallenge_Announcement", _args, callback, asyncState);
                return _result;
            }
            
            public OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement EndGetCodeChallenge_Announcement(System.IAsyncResult result) {
                object[] _args = new object[0];
                OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement _result = ((OmahaMTG.CodeChallengeMobile.CodeChallengeService.QueryResultOfCodeChallenge_Announcement)(base.EndInvoke("GetCodeChallenge_Announcement", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitChanges(System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> changeSet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = changeSet;
                System.IAsyncResult _result = base.BeginInvoke("SubmitChanges", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> EndSubmitChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry> _result = ((System.Collections.ObjectModel.ObservableCollection<OmahaMTG.CodeChallengeMobile.CodeChallengeService.ChangeSetEntry>)(base.EndInvoke("SubmitChanges", _args, result)));
                return _result;
            }
        }
    }
}
